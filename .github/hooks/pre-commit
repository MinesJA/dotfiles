#!/usr/bin/env bash
# Pre-commit hook to prevent committing secrets

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check for common secret patterns
check_secrets() {
    local file="$1"
    local errors=0
    
    # Skip binary files
    if file "$file" | grep -q "binary"; then
        return 0
    fi
    
    # GitHub tokens
    if grep -E "(ghp_[a-zA-Z0-9]{36}|github_pat_[a-zA-Z0-9]{22}_[a-zA-Z0-9]{59}|ghs_[a-zA-Z0-9]{36})" "$file" >/dev/null 2>&1; then
        echo -e "${RED}ERROR: Found GitHub token in $file${NC}"
        errors=$((errors + 1))
    fi
    
    # Private keys
    if grep -E "(-----BEGIN (RSA |DSA |EC |OPENSSH )?PRIVATE KEY-----)" "$file" >/dev/null 2>&1; then
        echo -e "${RED}ERROR: Found private key in $file${NC}"
        errors=$((errors + 1))
    fi
    
    # AWS Access Keys
    if grep -E "(AKIA[0-9A-Z]{16})" "$file" >/dev/null 2>&1; then
        echo -e "${RED}ERROR: Found AWS access key in $file${NC}"
        errors=$((errors + 1))
    fi
    
    # OpenAI API Keys
    if grep -E "(sk-[a-zA-Z0-9]{48})" "$file" >/dev/null 2>&1; then
        echo -e "${RED}ERROR: Found OpenAI API key in $file${NC}"
        errors=$((errors + 1))
    fi
    
    # Check for forbidden files
    case "$(basename "$file")" in
        secrets.zsh|.env|.envrc)
            echo -e "${RED}ERROR: Attempting to commit forbidden file: $file${NC}"
            errors=$((errors + 1))
            ;;
    esac
    
    return $errors
}

echo -e "${YELLOW}Running pre-commit checks...${NC}"

# Get list of staged files
staged_files=$(git diff --cached --name-only)

total_errors=0
for file in $staged_files; do
    if [ -f "$file" ]; then
        check_secrets "$file" || total_errors=$((total_errors + $?))
    fi
done

if [ $total_errors -gt 0 ]; then
    echo -e "${RED}Pre-commit check failed! Found $total_errors potential secret(s).${NC}"
    echo -e "${YELLOW}If these are false positives, you can skip this check with: git commit --no-verify${NC}"
    exit 1
else
    echo -e "${GREEN}Pre-commit checks passed!${NC}"
fi

exit 0